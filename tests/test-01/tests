ff -H
foo
BAR
baz
dir
dir/dir
dir/dir/empty
dir/empty_dir



ff type=d
dir
dir/dir
dir/empty_dir



ff -H type=f
foo
baz
dir/dir/empty



ff type=f
foo
baz
dir/dir/empty
.hidden



ff type=l
BAR



ff -o link,name
foo BAR



ff --all -o link,path
foo BAR
 baz
 dir
 dir/dir
 dir/dir/empty
 dir/empty_dir
 foo
 .hidden



ff -x echo {link}
foo



ff -j1 -S -x echo {link}
foo



ff -x echo {name}-{link}
BAR-foo



ff --all -x echo {name}-{link}
foo-
BAR-foo
baz-
dir-
dir-
empty-
empty_dir-
.hidden-



ff -X echo {link}
foo



ff name%ba?
BAR
baz



ff -H empty=yes
dir/empty_dir
dir/dir/empty



ff -H empty=yes OR type=l
dir/empty_dir
dir/dir/empty
BAR



ff empty=no
foo
BAR
baz
dir
dir/dir



ff -H depth=0
foo
BAR
baz
dir



ff depth+=1
dir/dir
dir/dir/empty
dir/empty_dir



ff -H -d0
foo
BAR
baz
dir



ff -d1-
dir/dir
dir/dir/empty
dir/empty_dir



ff -H -d0-1
foo
BAR
baz
dir
dir/dir
dir/empty_dir



ff -H -d0,2
foo
BAR
baz
dir
dir/dir/empty



ff -H size=0
BAR
dir/dir/empty
dir
dir/dir
dir/empty_dir



ff size+0
foo
baz



ff size+=10
baz



ff -H -o perm:o,size:o,name not type=d depth=0
777 0 BAR
644 4 foo
644 12 baz



# exclude
ff -H -e dir 2>/dev/null; echo $?
12



ff -H -e name=dir
foo
BAR
baz



# keep_order
ff -H -S
BAR
baz
dir
dir/dir
dir/dir/empty
dir/empty_dir
foo



ff -S
BAR
baz
dir
dir/dir
dir/dir/empty
dir/empty_dir
foo
.hidden



ff -H -S -R
foo
dir/empty_dir
dir/dir/empty
dir/dir
dir
baz
BAR



ff -H -S size type=f
dir/dir/empty
foo
baz



ff -H -S -1
BAR


# --limit
ff -H -S -R -l :5
foo
dir/empty_dir
dir/dir/empty
dir/dir
dir



ff -H -S -R -l 5:
baz
BAR



ff -H -S -R -l -5:
dir/dir/empty
dir/dir
dir
baz
BAR



ff -H -S -R -l -2:-1
baz



ff -H -S -R -l 2:1



ff -H -S -R -l 2,0
foo
dir/empty_dir

ff -H -S -R -l 2,1
dir/dir/empty
dir/dir

ff -H -S -R -l 2,2
dir
baz

ff -H -S -R -l 2,3
BAR



# no_order
ff -H -o mode:h,links,size:5h,path:h
lrwxrwxrwx 1     0 BAR -> foo
-rw-r--r-- 1     4 foo
-rw-r--r-- 1    10 baz
drwxr-xr-x 4     0 dir
-rw-r--r-- 1     0 dir/dir/empty
drwxr-xr-x 2     0 dir/empty_dir
drwxr-xr-x 2     0 dir/dir



ff -H -o size,links,path --sep :
0:1:BAR
4:1:foo
10:1:baz
0:4:dir
0:1:dir/dir/empty
0:2:dir/empty_dir
0:2:dir/dir



# Test sub testsequences and operators.
ff type=f \( name=baz or name=foo \)
foo
baz


ff \( name=BAR or name=foo \) \( type=l or type=f \)
foo
BAR


ff \( name=baz or name=foo \) type=f or type=l
foo
BAR
baz


ff \( path:/dir/ type=f \) or \( name=dir type=d \)
dir
dir/dir
dir/dir/empty


ff -H {{ type=f and not type=l }}
foo
baz
dir/dir/empty


ff -H type=f and not {{ name=baz or name=empty }}
foo


ff -H type=f and {{ not name=baz and not name=empty }}
foo


ff name=baz or 2>/dev/null; echo $?
1


ff or name=baz 2>/dev/null; echo $?
1


ff name=baz or or name=foo 2>/dev/null; echo $?
1


# usage
( cd ..; ff -H workdir/ type=f and {{ not name=baz and not name=empty }} )
workdir/foo

( cd ..; ff type=f workdir/ and {{ not name=baz and not name=empty }} 2>/dev/null ); echo $?
12

( cd ..; ff type=f and {{ not name=baz workdir/ and not name=empty }} 2>/dev/null ); echo $?
12

( cd ..; ff -H type=f and {{ not name=baz and not name=empty }} workdir/ )
workdir/foo


ff name%ba?
BAR
baz


ff name:ba?


ff path:dir/empty
dir/dir/empty
dir/empty_dir


ff name~ba.
BAR
baz


# JSON
ff -H --json -o name,size type=f -S name
[{"name": "baz", "size": 10},{"name": "empty", "size": 0},{"name": "foo", "size": 4}]



ff -H --jsonl -o name,size type=f -S name
{"name": "baz", "size": 10}
{"name": "empty", "size": 0}
{"name": "foo", "size": 4}



ff -H --ndjson -o name,size type=f -S name
{"name": "baz", "size": 10}
{"name": "empty", "size": 0}
{"name": "foo", "size": 4}



# Counts
ff -H --count size type=f
size=14
_total=3



ff -H --count type
type[directory]=3
type[file]=3
type[symlink]=1
_total=7



ff -H --count file.size,type --json
{"_total": 7, "file.size": 14, "type": {"directory": 3, "file": 3, "symlink": 1}}



# --halt tests
ff -H -j1 -S --halt never -x ../test.sh
BAR
baz
dir
dir/dir
dir/dir/empty
dir/empty_dir
foo
ERROR: One or more -x/--exec commands had errors (success: 6, failure: 1)


ff -H -j1 -S --halt soon -x ../test.sh
BAR
baz
ERROR: One or more -x/--exec commands had errors (success: 1, failure: 1)


ff -H -j1 -S --halt now -x ../test.sh
BAR
baz
ERROR: One or more -x/--exec commands had errors (success: 1, failure: 1)


# Regression testing

# Check if sort using a missing field works.
ff -H -S duration
foo
BAR
baz
dir
dir/dir
dir/dir/empty
dir/empty_dir

# Check that absolute paths don't have two leading slashes.
ff -e depth+0 name=usr or name=etc /
/usr
/etc

# Check that usage errors are properly printed.
ff --count -D . -D ./dir 2>&1
ERROR: './dir' is a sub-directory of '.'

ff --count --limit :10
ERROR: You cannot use --limit together with --count!


# no_order
# Using -x together with -S hangs ff.
timeout 3 ff -H -S -x echo; echo $?
foo
BAR
baz
dir
dir/dir
dir/dir/empty
dir/empty_dir
0
