#!/usr/bin/python

import re
import datetime

import git

from libff.__version__ import __version__


def get_version(commit):
    """Extract the version number from this commit's __version__.py.
    """
    for line in get_lines(commit, "libff/__version__.py"):
        match = re.match(r"^__version__ = (\d+)$", line)
        if match:
            return int(match.group(1))
    else:
        raise ValueError("unable to find __version__")


def find_commits(repo, current_version):
    """Find all recent commits that were made after the version number was
       changed, i.e. after the last release.
    """
    commits = []
    commit = repo.head.commit
    while True:
        version = get_version(commit.parents[0])
        if version < current_version:
            return commits

        commits.append(commit)
        commit = commit.parents[0]


def get_lines(commit, filename):
    """Extract the lines of a file from a specific commit.
    """
    try:
        blob = commit.tree / filename
    except KeyError:
        return []
    else:
        text = blob.data_stream.read().decode("utf-8")
        return text.splitlines()


repo = git.Repo()

if repo.is_dirty():
    raise SystemExit("ERROR: there are uncommitted changes!")

current_version = __version__

lines = []
lines.append(f"### Version {current_version + 1} - ({datetime.date.today()})")
lines.append("")

for commit in reversed(find_commits(repo, current_version)):
    lines.append(f"- {commit.message.splitlines()[0]}")
lines.append("")

lines += get_lines(repo.head.commit, "CHANGES.md")

with open("CHANGES.md", "w") as fobj:
    for line in lines:
        print(line, file=fobj)

with open("libff/__version__.py", "w") as fobj:
    for line in get_lines(repo.head.commit, "libff/__version__.py"):
        if re.match(r"^__version__ = (\d+)$", line):
            print(f"__version__ = {current_version + 1}", file=fobj)
            break
        else:
            print(line, file=fobj)
    else:
        raise ValueError("unable to find __version__")

print()
print("Please edit CHANGES.md now and then ./publish")
print()
